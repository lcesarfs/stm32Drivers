
stm32f103cbt6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000048c  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000548  08000550  00010550  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000548  08000548  00010550  2**0
                  CONTENTS
  4 .ARM          00000000  08000548  08000548  00010550  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000548  08000550  00010550  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000548  08000548  00010548  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800054c  0800054c  0001054c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010550  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000550  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000550  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00010550  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000859  00000000  00000000  00010578  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000022e  00000000  00000000  00010dd1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000b8  00000000  00000000  00011000  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000090  00000000  00000000  000110b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000129a  00000000  00000000  00011148  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b91  00000000  00000000  000123e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00004cce  00000000  00000000  00012f73  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00017c41  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d0  00000000  00000000  00017c94  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08000530 	.word	0x08000530

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000004 	.word	0x20000004
 8000100:	08000530 	.word	0x08000530

08000104 <delay>:


#include "stm32f106cbt6.h"

void delay(void)
{
 8000104:	b580      	push	{r7, lr}
 8000106:	b082      	sub	sp, #8
 8000108:	af00      	add	r7, sp, #0
	for (uint32_t i = 0; i<50000; i++);
 800010a:	2300      	movs	r3, #0
 800010c:	607b      	str	r3, [r7, #4]
 800010e:	e002      	b.n	8000116 <delay+0x12>
 8000110:	687b      	ldr	r3, [r7, #4]
 8000112:	3301      	adds	r3, #1
 8000114:	607b      	str	r3, [r7, #4]
 8000116:	687b      	ldr	r3, [r7, #4]
 8000118:	4a03      	ldr	r2, [pc, #12]	; (8000128 <delay+0x24>)
 800011a:	4293      	cmp	r3, r2
 800011c:	d9f8      	bls.n	8000110 <delay+0xc>
}
 800011e:	46c0      	nop			; (mov r8, r8)
 8000120:	46c0      	nop			; (mov r8, r8)
 8000122:	46bd      	mov	sp, r7
 8000124:	b002      	add	sp, #8
 8000126:	bd80      	pop	{r7, pc}
 8000128:	0000c34f 	.word	0x0000c34f

0800012c <main>:

int main(void)
{
 800012c:	b580      	push	{r7, lr}
 800012e:	b084      	sub	sp, #16
 8000130:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOA;
 8000132:	1d3b      	adds	r3, r7, #4
 8000134:	22a0      	movs	r2, #160	; 0xa0
 8000136:	05d2      	lsls	r2, r2, #23
 8000138:	601a      	str	r2, [r3, #0]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800013a:	1d3b      	adds	r3, r7, #4
 800013c:	2205      	movs	r2, #5
 800013e:	711a      	strb	r2, [r3, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000140:	1d3b      	adds	r3, r7, #4
 8000142:	2201      	movs	r2, #1
 8000144:	715a      	strb	r2, [r3, #5]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000146:	1d3b      	adds	r3, r7, #4
 8000148:	2202      	movs	r2, #2
 800014a:	719a      	strb	r2, [r3, #6]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800014c:	1d3b      	adds	r3, r7, #4
 800014e:	2200      	movs	r2, #0
 8000150:	721a      	strb	r2, [r3, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000152:	1d3b      	adds	r3, r7, #4
 8000154:	2200      	movs	r2, #0
 8000156:	71da      	strb	r2, [r3, #7]

	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000158:	23a0      	movs	r3, #160	; 0xa0
 800015a:	05db      	lsls	r3, r3, #23
 800015c:	2101      	movs	r1, #1
 800015e:	0018      	movs	r0, r3
 8000160:	f000 f838 	bl	80001d4 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000164:	1d3b      	adds	r3, r7, #4
 8000166:	0018      	movs	r0, r3
 8000168:	f000 f8d4 	bl	8000314 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800016c:	23a0      	movs	r3, #160	; 0xa0
 800016e:	05db      	lsls	r3, r3, #23
 8000170:	2105      	movs	r1, #5
 8000172:	0018      	movs	r0, r3
 8000174:	f000 f9a2 	bl	80004bc <GPIO_ToggleOutputPin>

		delay();
 8000178:	f7ff ffc4 	bl	8000104 <delay>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800017c:	e7f6      	b.n	800016c <main+0x40>
	...

08000180 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000180:	480d      	ldr	r0, [pc, #52]	; (80001b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000182:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000184:	e000      	b.n	8000188 <Reset_Handler+0x8>
 8000186:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000188:	480c      	ldr	r0, [pc, #48]	; (80001bc <LoopForever+0x6>)
  ldr r1, =_edata
 800018a:	490d      	ldr	r1, [pc, #52]	; (80001c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800018c:	4a0d      	ldr	r2, [pc, #52]	; (80001c4 <LoopForever+0xe>)
  movs r3, #0
 800018e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000190:	e002      	b.n	8000198 <LoopCopyDataInit>

08000192 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000192:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000194:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000196:	3304      	adds	r3, #4

08000198 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000198:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800019a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800019c:	d3f9      	bcc.n	8000192 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800019e:	4a0a      	ldr	r2, [pc, #40]	; (80001c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001a0:	4c0a      	ldr	r4, [pc, #40]	; (80001cc <LoopForever+0x16>)
  movs r3, #0
 80001a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001a4:	e001      	b.n	80001aa <LoopFillZerobss>

080001a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001a8:	3204      	adds	r2, #4

080001aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001ac:	d3fb      	bcc.n	80001a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001ae:	f000 f99b 	bl	80004e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001b2:	f7ff ffbb 	bl	800012c <main>

080001b6 <LoopForever>:

LoopForever:
  b LoopForever
 80001b6:	e7fe      	b.n	80001b6 <LoopForever>
  ldr   r0, =_estack
 80001b8:	20024000 	.word	0x20024000
  ldr r0, =_sdata
 80001bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001c0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80001c4:	08000550 	.word	0x08000550
  ldr r2, =_sbss
 80001c8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80001cc:	2000001c 	.word	0x2000001c

080001d0 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001d0:	e7fe      	b.n	80001d0 <ADC_COMP_IRQHandler>
	...

080001d4 <GPIO_PeriClockControl>:
 * */

 /*  Peripheral Clock setup */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi )
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	000a      	movs	r2, r1
 80001de:	1cfb      	adds	r3, r7, #3
 80001e0:	701a      	strb	r2, [r3, #0]
	if (EnorDi == ENABLE)
 80001e2:	1cfb      	adds	r3, r7, #3
 80001e4:	781b      	ldrb	r3, [r3, #0]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d142      	bne.n	8000270 <GPIO_PeriClockControl+0x9c>
	{
		if (pGPIOx == GPIOA)
 80001ea:	687a      	ldr	r2, [r7, #4]
 80001ec:	23a0      	movs	r3, #160	; 0xa0
 80001ee:	05db      	lsls	r3, r3, #23
 80001f0:	429a      	cmp	r2, r3
 80001f2:	d106      	bne.n	8000202 <GPIO_PeriClockControl+0x2e>
		{
			GPIOA_PCLK_EN();
 80001f4:	4b41      	ldr	r3, [pc, #260]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80001f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80001f8:	4b40      	ldr	r3, [pc, #256]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80001fa:	2101      	movs	r1, #1
 80001fc:	430a      	orrs	r2, r1
 80001fe:	635a      	str	r2, [r3, #52]	; 0x34
		}else if (pGPIOx == GPIOF)
		{
			GPIOF_PCLK_DI();
		}
	}
}
 8000200:	e078      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOB)
 8000202:	687b      	ldr	r3, [r7, #4]
 8000204:	4a3e      	ldr	r2, [pc, #248]	; (8000300 <GPIO_PeriClockControl+0x12c>)
 8000206:	4293      	cmp	r3, r2
 8000208:	d106      	bne.n	8000218 <GPIO_PeriClockControl+0x44>
			GPIOB_PCLK_EN();
 800020a:	4b3c      	ldr	r3, [pc, #240]	; (80002fc <GPIO_PeriClockControl+0x128>)
 800020c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800020e:	4b3b      	ldr	r3, [pc, #236]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000210:	2102      	movs	r1, #2
 8000212:	430a      	orrs	r2, r1
 8000214:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000216:	e06d      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOC)
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	4a3a      	ldr	r2, [pc, #232]	; (8000304 <GPIO_PeriClockControl+0x130>)
 800021c:	4293      	cmp	r3, r2
 800021e:	d106      	bne.n	800022e <GPIO_PeriClockControl+0x5a>
			GPIOC_PCLK_EN();
 8000220:	4b36      	ldr	r3, [pc, #216]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000222:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000224:	4b35      	ldr	r3, [pc, #212]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000226:	2104      	movs	r1, #4
 8000228:	430a      	orrs	r2, r1
 800022a:	635a      	str	r2, [r3, #52]	; 0x34
}
 800022c:	e062      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOD)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	4a35      	ldr	r2, [pc, #212]	; (8000308 <GPIO_PeriClockControl+0x134>)
 8000232:	4293      	cmp	r3, r2
 8000234:	d106      	bne.n	8000244 <GPIO_PeriClockControl+0x70>
			GPIOD_PCLK_EN();
 8000236:	4b31      	ldr	r3, [pc, #196]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000238:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800023a:	4b30      	ldr	r3, [pc, #192]	; (80002fc <GPIO_PeriClockControl+0x128>)
 800023c:	2108      	movs	r1, #8
 800023e:	430a      	orrs	r2, r1
 8000240:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000242:	e057      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOE)
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	4a31      	ldr	r2, [pc, #196]	; (800030c <GPIO_PeriClockControl+0x138>)
 8000248:	4293      	cmp	r3, r2
 800024a:	d106      	bne.n	800025a <GPIO_PeriClockControl+0x86>
			GPIOE_PCLK_EN();
 800024c:	4b2b      	ldr	r3, [pc, #172]	; (80002fc <GPIO_PeriClockControl+0x128>)
 800024e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000250:	4b2a      	ldr	r3, [pc, #168]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000252:	2110      	movs	r1, #16
 8000254:	430a      	orrs	r2, r1
 8000256:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000258:	e04c      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOF)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	4a2c      	ldr	r2, [pc, #176]	; (8000310 <GPIO_PeriClockControl+0x13c>)
 800025e:	4293      	cmp	r3, r2
 8000260:	d148      	bne.n	80002f4 <GPIO_PeriClockControl+0x120>
			GPIOF_PCLK_EN();
 8000262:	4b26      	ldr	r3, [pc, #152]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000264:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000266:	4b25      	ldr	r3, [pc, #148]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000268:	2120      	movs	r1, #32
 800026a:	430a      	orrs	r2, r1
 800026c:	635a      	str	r2, [r3, #52]	; 0x34
}
 800026e:	e041      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		if (pGPIOx == GPIOA)
 8000270:	687a      	ldr	r2, [r7, #4]
 8000272:	23a0      	movs	r3, #160	; 0xa0
 8000274:	05db      	lsls	r3, r3, #23
 8000276:	429a      	cmp	r2, r3
 8000278:	d106      	bne.n	8000288 <GPIO_PeriClockControl+0xb4>
			GPIOA_PCLK_DI();
 800027a:	4b20      	ldr	r3, [pc, #128]	; (80002fc <GPIO_PeriClockControl+0x128>)
 800027c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800027e:	4b1f      	ldr	r3, [pc, #124]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000280:	2101      	movs	r1, #1
 8000282:	438a      	bics	r2, r1
 8000284:	635a      	str	r2, [r3, #52]	; 0x34
}
 8000286:	e035      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOB)
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	4a1d      	ldr	r2, [pc, #116]	; (8000300 <GPIO_PeriClockControl+0x12c>)
 800028c:	4293      	cmp	r3, r2
 800028e:	d106      	bne.n	800029e <GPIO_PeriClockControl+0xca>
			GPIOB_PCLK_DI();
 8000290:	4b1a      	ldr	r3, [pc, #104]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000292:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000294:	4b19      	ldr	r3, [pc, #100]	; (80002fc <GPIO_PeriClockControl+0x128>)
 8000296:	2102      	movs	r1, #2
 8000298:	438a      	bics	r2, r1
 800029a:	635a      	str	r2, [r3, #52]	; 0x34
}
 800029c:	e02a      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOC)
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	4a18      	ldr	r2, [pc, #96]	; (8000304 <GPIO_PeriClockControl+0x130>)
 80002a2:	4293      	cmp	r3, r2
 80002a4:	d106      	bne.n	80002b4 <GPIO_PeriClockControl+0xe0>
			GPIOC_PCLK_DI();
 80002a6:	4b15      	ldr	r3, [pc, #84]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002a8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002aa:	4b14      	ldr	r3, [pc, #80]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002ac:	2104      	movs	r1, #4
 80002ae:	438a      	bics	r2, r1
 80002b0:	635a      	str	r2, [r3, #52]	; 0x34
}
 80002b2:	e01f      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOD)
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	4a14      	ldr	r2, [pc, #80]	; (8000308 <GPIO_PeriClockControl+0x134>)
 80002b8:	4293      	cmp	r3, r2
 80002ba:	d106      	bne.n	80002ca <GPIO_PeriClockControl+0xf6>
			GPIOD_PCLK_DI();
 80002bc:	4b0f      	ldr	r3, [pc, #60]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002c0:	4b0e      	ldr	r3, [pc, #56]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002c2:	2108      	movs	r1, #8
 80002c4:	438a      	bics	r2, r1
 80002c6:	635a      	str	r2, [r3, #52]	; 0x34
}
 80002c8:	e014      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOE)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a0f      	ldr	r2, [pc, #60]	; (800030c <GPIO_PeriClockControl+0x138>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PeriClockControl+0x10c>
			GPIOE_PCLK_DI();
 80002d2:	4b0a      	ldr	r3, [pc, #40]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002d4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002d6:	4b09      	ldr	r3, [pc, #36]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002d8:	2110      	movs	r1, #16
 80002da:	438a      	bics	r2, r1
 80002dc:	635a      	str	r2, [r3, #52]	; 0x34
}
 80002de:	e009      	b.n	80002f4 <GPIO_PeriClockControl+0x120>
		}else if (pGPIOx == GPIOF)
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a0b      	ldr	r2, [pc, #44]	; (8000310 <GPIO_PeriClockControl+0x13c>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d105      	bne.n	80002f4 <GPIO_PeriClockControl+0x120>
			GPIOF_PCLK_DI();
 80002e8:	4b04      	ldr	r3, [pc, #16]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002ec:	4b03      	ldr	r3, [pc, #12]	; (80002fc <GPIO_PeriClockControl+0x128>)
 80002ee:	2120      	movs	r1, #32
 80002f0:	438a      	bics	r2, r1
 80002f2:	635a      	str	r2, [r3, #52]	; 0x34
}
 80002f4:	46c0      	nop			; (mov r8, r8)
 80002f6:	46bd      	mov	sp, r7
 80002f8:	b002      	add	sp, #8
 80002fa:	bd80      	pop	{r7, pc}
 80002fc:	40021000 	.word	0x40021000
 8000300:	50000400 	.word	0x50000400
 8000304:	50000800 	.word	0x50000800
 8000308:	50000c00 	.word	0x50000c00
 800030c:	50001000 	.word	0x50001000
 8000310:	50001400 	.word	0x50001400

08000314 <GPIO_Init>:

/* Peripheral Ini and De-init */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000314:	b5b0      	push	{r4, r5, r7, lr}
 8000316:	b084      	sub	sp, #16
 8000318:	af00      	add	r7, sp, #0
 800031a:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 800031c:	2300      	movs	r3, #0
 800031e:	60fb      	str	r3, [r7, #12]
//1. configure the mode of the gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANA)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	795b      	ldrb	r3, [r3, #5]
 8000324:	2b03      	cmp	r3, #3
 8000326:	d81f      	bhi.n	8000368 <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	795b      	ldrb	r3, [r3, #5]
 800032c:	001a      	movs	r2, r3
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	791b      	ldrb	r3, [r3, #4]
 8000332:	005b      	lsls	r3, r3, #1
 8000334:	409a      	lsls	r2, r3
 8000336:	0013      	movs	r3, r2
 8000338:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	681a      	ldr	r2, [r3, #0]
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	791b      	ldrb	r3, [r3, #4]
 8000344:	005b      	lsls	r3, r3, #1
 8000346:	2103      	movs	r1, #3
 8000348:	4099      	lsls	r1, r3
 800034a:	000b      	movs	r3, r1
 800034c:	43db      	mvns	r3, r3
 800034e:	0019      	movs	r1, r3
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	400a      	ands	r2, r1
 8000356:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	6819      	ldr	r1, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	68fa      	ldr	r2, [r7, #12]
 8000364:	430a      	orrs	r2, r1
 8000366:	601a      	str	r2, [r3, #0]

	}else
	{

	}
	temp = 0;
 8000368:	2300      	movs	r3, #0
 800036a:	60fb      	str	r3, [r7, #12]

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	799b      	ldrb	r3, [r3, #6]
 8000370:	001a      	movs	r2, r3
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	791b      	ldrb	r3, [r3, #4]
 8000376:	005b      	lsls	r3, r3, #1
 8000378:	409a      	lsls	r2, r3
 800037a:	0013      	movs	r3, r2
 800037c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	689a      	ldr	r2, [r3, #8]
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	791b      	ldrb	r3, [r3, #4]
 8000388:	005b      	lsls	r3, r3, #1
 800038a:	2103      	movs	r1, #3
 800038c:	4099      	lsls	r1, r3
 800038e:	000b      	movs	r3, r1
 8000390:	43db      	mvns	r3, r3
 8000392:	0019      	movs	r1, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	400a      	ands	r2, r1
 800039a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	6899      	ldr	r1, [r3, #8]
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	68fa      	ldr	r2, [r7, #12]
 80003a8:	430a      	orrs	r2, r1
 80003aa:	609a      	str	r2, [r3, #8]
	temp = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	60fb      	str	r3, [r7, #12]

	//3. configure pull up and pull down settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	79db      	ldrb	r3, [r3, #7]
 80003b4:	001a      	movs	r2, r3
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	791b      	ldrb	r3, [r3, #4]
 80003ba:	005b      	lsls	r3, r3, #1
 80003bc:	409a      	lsls	r2, r3
 80003be:	0013      	movs	r3, r2
 80003c0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	68da      	ldr	r2, [r3, #12]
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	791b      	ldrb	r3, [r3, #4]
 80003cc:	005b      	lsls	r3, r3, #1
 80003ce:	2103      	movs	r1, #3
 80003d0:	4099      	lsls	r1, r3
 80003d2:	000b      	movs	r3, r1
 80003d4:	43db      	mvns	r3, r3
 80003d6:	0019      	movs	r1, r3
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	400a      	ands	r2, r1
 80003de:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	68d9      	ldr	r1, [r3, #12]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	68fa      	ldr	r2, [r7, #12]
 80003ec:	430a      	orrs	r2, r1
 80003ee:	60da      	str	r2, [r3, #12]
	temp = 0;
 80003f0:	2300      	movs	r3, #0
 80003f2:	60fb      	str	r3, [r7, #12]

	//4. configure the output type
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType<<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	7a1b      	ldrb	r3, [r3, #8]
 80003f8:	001a      	movs	r2, r3
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	791b      	ldrb	r3, [r3, #4]
 80003fe:	409a      	lsls	r2, r3
 8000400:	0013      	movs	r3, r2
 8000402:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	685a      	ldr	r2, [r3, #4]
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	791b      	ldrb	r3, [r3, #4]
 800040e:	0019      	movs	r1, r3
 8000410:	2301      	movs	r3, #1
 8000412:	408b      	lsls	r3, r1
 8000414:	43db      	mvns	r3, r3
 8000416:	0019      	movs	r1, r3
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	400a      	ands	r2, r1
 800041e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	6859      	ldr	r1, [r3, #4]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	68fa      	ldr	r2, [r7, #12]
 800042c:	430a      	orrs	r2, r1
 800042e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000430:	2300      	movs	r3, #0
 8000432:	60fb      	str	r3, [r7, #12]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	795b      	ldrb	r3, [r3, #5]
 8000438:	2b02      	cmp	r3, #2
 800043a:	d13b      	bne.n	80004b4 <GPIO_Init+0x1a0>
	{
////		configure the alt function register
		uint8_t temp1, temp2;
//
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber /8;
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	791a      	ldrb	r2, [r3, #4]
 8000440:	240b      	movs	r4, #11
 8000442:	193b      	adds	r3, r7, r4
 8000444:	08d2      	lsrs	r2, r2, #3
 8000446:	701a      	strb	r2, [r3, #0]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber %8;
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	791a      	ldrb	r2, [r3, #4]
 800044c:	250a      	movs	r5, #10
 800044e:	197b      	adds	r3, r7, r5
 8000450:	2107      	movs	r1, #7
 8000452:	400a      	ands	r2, r1
 8000454:	701a      	strb	r2, [r3, #0]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~ (0x0F << ( 4 * temp2 ));
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	193a      	adds	r2, r7, r4
 800045c:	7812      	ldrb	r2, [r2, #0]
 800045e:	3208      	adds	r2, #8
 8000460:	0092      	lsls	r2, r2, #2
 8000462:	58d1      	ldr	r1, [r2, r3]
 8000464:	197b      	adds	r3, r7, r5
 8000466:	781b      	ldrb	r3, [r3, #0]
 8000468:	009b      	lsls	r3, r3, #2
 800046a:	220f      	movs	r2, #15
 800046c:	409a      	lsls	r2, r3
 800046e:	0013      	movs	r3, r2
 8000470:	43db      	mvns	r3, r3
 8000472:	0018      	movs	r0, r3
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	193a      	adds	r2, r7, r4
 800047a:	7812      	ldrb	r2, [r2, #0]
 800047c:	4001      	ands	r1, r0
 800047e:	3208      	adds	r2, #8
 8000480:	0092      	lsls	r2, r2, #2
 8000482:	50d1      	str	r1, [r2, r3]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ));
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	193a      	adds	r2, r7, r4
 800048a:	7812      	ldrb	r2, [r2, #0]
 800048c:	3208      	adds	r2, #8
 800048e:	0092      	lsls	r2, r2, #2
 8000490:	58d1      	ldr	r1, [r2, r3]
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	7a5b      	ldrb	r3, [r3, #9]
 8000496:	001a      	movs	r2, r3
 8000498:	197b      	adds	r3, r7, r5
 800049a:	781b      	ldrb	r3, [r3, #0]
 800049c:	009b      	lsls	r3, r3, #2
 800049e:	409a      	lsls	r2, r3
 80004a0:	0013      	movs	r3, r2
 80004a2:	0018      	movs	r0, r3
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	193a      	adds	r2, r7, r4
 80004aa:	7812      	ldrb	r2, [r2, #0]
 80004ac:	4301      	orrs	r1, r0
 80004ae:	3208      	adds	r2, #8
 80004b0:	0092      	lsls	r2, r2, #2
 80004b2:	50d1      	str	r1, [r2, r3]
	}

}
 80004b4:	46c0      	nop			; (mov r8, r8)
 80004b6:	46bd      	mov	sp, r7
 80004b8:	b004      	add	sp, #16
 80004ba:	bdb0      	pop	{r4, r5, r7, pc}

080004bc <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80004bc:	b580      	push	{r7, lr}
 80004be:	b082      	sub	sp, #8
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	6078      	str	r0, [r7, #4]
 80004c4:	000a      	movs	r2, r1
 80004c6:	1cfb      	adds	r3, r7, #3
 80004c8:	701a      	strb	r2, [r3, #0]
	pGPIOx->ODR ^= (1<<PinNumber);
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	695b      	ldr	r3, [r3, #20]
 80004ce:	1cfa      	adds	r2, r7, #3
 80004d0:	7812      	ldrb	r2, [r2, #0]
 80004d2:	2101      	movs	r1, #1
 80004d4:	4091      	lsls	r1, r2
 80004d6:	000a      	movs	r2, r1
 80004d8:	405a      	eors	r2, r3
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	615a      	str	r2, [r3, #20]
}
 80004de:	46c0      	nop			; (mov r8, r8)
 80004e0:	46bd      	mov	sp, r7
 80004e2:	b002      	add	sp, #8
 80004e4:	bd80      	pop	{r7, pc}
	...

080004e8 <__libc_init_array>:
 80004e8:	b570      	push	{r4, r5, r6, lr}
 80004ea:	2600      	movs	r6, #0
 80004ec:	4d0c      	ldr	r5, [pc, #48]	; (8000520 <__libc_init_array+0x38>)
 80004ee:	4c0d      	ldr	r4, [pc, #52]	; (8000524 <__libc_init_array+0x3c>)
 80004f0:	1b64      	subs	r4, r4, r5
 80004f2:	10a4      	asrs	r4, r4, #2
 80004f4:	42a6      	cmp	r6, r4
 80004f6:	d109      	bne.n	800050c <__libc_init_array+0x24>
 80004f8:	2600      	movs	r6, #0
 80004fa:	f000 f819 	bl	8000530 <_init>
 80004fe:	4d0a      	ldr	r5, [pc, #40]	; (8000528 <__libc_init_array+0x40>)
 8000500:	4c0a      	ldr	r4, [pc, #40]	; (800052c <__libc_init_array+0x44>)
 8000502:	1b64      	subs	r4, r4, r5
 8000504:	10a4      	asrs	r4, r4, #2
 8000506:	42a6      	cmp	r6, r4
 8000508:	d105      	bne.n	8000516 <__libc_init_array+0x2e>
 800050a:	bd70      	pop	{r4, r5, r6, pc}
 800050c:	00b3      	lsls	r3, r6, #2
 800050e:	58eb      	ldr	r3, [r5, r3]
 8000510:	4798      	blx	r3
 8000512:	3601      	adds	r6, #1
 8000514:	e7ee      	b.n	80004f4 <__libc_init_array+0xc>
 8000516:	00b3      	lsls	r3, r6, #2
 8000518:	58eb      	ldr	r3, [r5, r3]
 800051a:	4798      	blx	r3
 800051c:	3601      	adds	r6, #1
 800051e:	e7f2      	b.n	8000506 <__libc_init_array+0x1e>
 8000520:	08000548 	.word	0x08000548
 8000524:	08000548 	.word	0x08000548
 8000528:	08000548 	.word	0x08000548
 800052c:	0800054c 	.word	0x0800054c

08000530 <_init>:
 8000530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000532:	46c0      	nop			; (mov r8, r8)
 8000534:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000536:	bc08      	pop	{r3}
 8000538:	469e      	mov	lr, r3
 800053a:	4770      	bx	lr

0800053c <_fini>:
 800053c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800053e:	46c0      	nop			; (mov r8, r8)
 8000540:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000542:	bc08      	pop	{r3}
 8000544:	469e      	mov	lr, r3
 8000546:	4770      	bx	lr
